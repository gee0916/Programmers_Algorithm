// 점 네 개의 좌표를 담은 이차원 배열  dots가 다음과 같이 매개변수로 주어집니다.

// [[x1, y1], [x2, y2], [x3, y3], [x4, y4]]
// 주어진 네 개의 점을 두 개씩 이었을 때, 두 직선이 평행이 되는 경우가 있으면 1을 없으면 0을 return 하도록 solution 함수를 완성해보세요.

function solution(dots) {
  var answer = 0;

  function arr(a, b, c, d) {
    let abSlope, cdSlope;
    //각 선분의 기울기 계산
    abSlope = (b[1] - a[1]) / (b[0] - a[0]);
    cdSlope = (d[1] - c[1]) / (d[0] - c[0]);

    if (abSlope === cdSlope) {
      answer += 1;
    }
  }

  // 1-2, 3-4가 이어졌을 때
  arr(dots[0], dots[1], dots[2], dots[3]);

  // 1-3, 2-4가 이어졌을 때
  arr(dots[0], dots[2], dots[1], dots[3]);

  // 1-4, 2-3가 이어졌을 때
  arr(dots[0], dots[3], dots[1], dots[2]);

  return answer > 0 ? 1 : 0;
}

// 테스트 1 〉	통과 (0.06ms, 33.5MB)
// 테스트 2 〉	통과 (0.06ms, 33.1MB)
// 테스트 3 〉	통과 (0.10ms, 33.3MB)
// 테스트 4 〉	통과 (0.06ms, 33.4MB)
// 테스트 5 〉	통과 (0.06ms, 33.4MB)
// 테스트 6 〉	통과 (0.10ms, 33.6MB)
// 테스트 7 〉	통과 (0.09ms, 33.6MB)
// 테스트 8 〉	통과 (0.07ms, 33.5MB)
// 테스트 9 〉	통과 (0.09ms, 33.4MB)
// 테스트 10 〉	통과 (0.09ms, 33.4MB)
// 테스트 11 〉	통과 (0.10ms, 33.4MB)
// 테스트 12 〉	통과 (0.06ms, 33.5MB)
// 테스트 13 〉	통과 (0.11ms, 33.4MB)
// 테스트 14 〉	통과 (0.06ms, 33.5MB)
// 테스트 15 〉	통과 (0.10ms, 33.5MB)
// 테스트 16 〉	통과 (0.09ms, 33.5MB)
// 테스트 17 〉	통과 (0.06ms, 33.4MB)
