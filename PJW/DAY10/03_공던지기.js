// 머쓱이는 친구들과 동그랗게 서서 공 던지기 게임을 하고 있습니다. 공은 1번부터 던지며 오른쪽으로 한 명을 건너뛰고 그다음 사람에게만 던질 수 있습니다. 친구들의 번호가 들어있는 정수 배열 numbers와 정수 K가 주어질 때, k번째로 공을 던지는 사람의 번호는 무엇인지 return 하도록 solution 함수를 완성해보세요.

function solution(numbers, k) {
  return numbers[((k - 1) * 2) % numbers.length];
}

// 테스트 1 〉	통과 (0.05ms, 33.4MB)
// 테스트 2 〉	통과 (0.02ms, 33.4MB)
// 테스트 3 〉	통과 (0.03ms, 33.5MB)
// 테스트 4 〉	통과 (0.02ms, 33.5MB)
// 테스트 5 〉	통과 (0.03ms, 33.5MB)
// 테스트 6 〉	통과 (0.02ms, 33.4MB)
// 테스트 7 〉	통과 (0.03ms, 33.6MB)
// 테스트 8 〉	통과 (0.03ms, 33.5MB)
// 테스트 9 〉	통과 (0.03ms, 33.5MB)
// 테스트 10 〉	통과 (0.03ms, 33.5MB)
// 테스트 11 〉	통과 (0.03ms, 33.4MB)
// 테스트 12 〉	통과 (0.03ms, 33.4MB)
// 테스트 13 〉	통과 (0.02ms, 33.4MB)
// 테스트 14 〉	통과 (0.03ms, 33.5MB)
// 테스트 15 〉	통과 (0.03ms, 33.5MB)
// 테스트 16 〉	통과 (0.02ms, 33.5MB)
// 테스트 17 〉	통과 (0.03ms, 33.4MB)
// 테스트 18 〉	통과 (0.03ms, 33.4MB)
// 테스트 19 〉	통과 (0.03ms, 33.5MB)
// 테스트 20 〉	통과 (0.03ms, 33.4MB)
// 테스트 21 〉	통과 (0.02ms, 33.5MB)
// 테스트 22 〉	통과 (0.03ms, 33.4MB)
// 테스트 23 〉	통과 (0.02ms, 33.4MB)
// 테스트 24 〉	통과 (0.02ms, 33.4MB)
// 테스트 25 〉	통과 (0.03ms, 33.5MB)
// 테스트 26 〉	통과 (0.03ms, 33.4MB)
// 테스트 27 〉	통과 (0.02ms, 33.4MB)
// 테스트 28 〉	통과 (0.02ms, 33.6MB)
// 테스트 29 〉	통과 (0.02ms, 33.4MB)
// 테스트 30 〉	통과 (0.03ms, 33.4MB)
// 테스트 31 〉	통과 (0.03ms, 33.5MB)
// 테스트 32 〉	통과 (0.03ms, 33.4MB)
// 테스트 33 〉	통과 (0.02ms, 33.5MB)
// 테스트 34 〉	통과 (0.03ms, 33.4MB)
// 테스트 35 〉	통과 (0.02ms, 33.4MB)
// 테스트 36 〉	통과 (0.02ms, 33.4MB)
// 테스트 37 〉	통과 (0.03ms, 33.4MB)
// 테스트 38 〉	통과 (0.02ms, 33.5MB)
// 테스트 39 〉	통과 (0.02ms, 33.4MB)
// 테스트 40 〉	통과 (0.03ms, 33.4MB)
// 테스트 41 〉	통과 (0.02ms, 33.4MB)
// 테스트 42 〉	통과 (0.03ms, 33.5MB)
// 테스트 43 〉	통과 (0.03ms, 33.5MB)
// 테스트 44 〉	통과 (0.02ms, 33.4MB)
// 테스트 45 〉	통과 (0.02ms, 33.4MB)
// 테스트 46 〉	통과 (0.02ms, 33.5MB)
// 테스트 47 〉	통과 (0.02ms, 33.5MB)
